{"ast":null,"code":"import budgetsReducer from '../reducers';\nconst store = createStore({\n  budgetsReducer // collateral: collateralReducer,\n  // loans: loansReducer,\n\n}); // const store = configureStore({\n//   reducer: {\n//     budgets: budgetsReducer,\n//     // collateral: collateralReducer,\n//     // loans: loansReducer,\n//   }\n// })\n\nexport default store; // export type AppDispatch = typeof store.dispatch\n// export const useAppDispatch = () => useDispatch()","map":{"version":3,"sources":["/Users/amber/Documents/workspace/code-challenge/my-app/src/store/index.tsx"],"names":["budgetsReducer","store","createStore"],"mappings":"AAGA,OAAOA,cAAP,MAA2B,aAA3B;AAIA,MAAMC,KAAK,GAAGC,WAAW,CAAC;AACxBF,EAAAA,cADwB,CAEtB;AACA;;AAHsB,CAAD,CAAzB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeC,KAAf,C,CAEA;AACA","sourcesContent":["import { configureStore, combineReducers, applyMiddleware, compose } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\n\nimport budgetsReducer from '../reducers'\nimport collateralReducer from '../reducers'\nimport loansReducer from '../reducers'\n\nconst store = createStore({\n  budgetsReducer,\n    // collateral: collateralReducer,\n    // loans: loansReducer,\n})\n// const store = configureStore({\n//   reducer: {\n//     budgets: budgetsReducer,\n//     // collateral: collateralReducer,\n//     // loans: loansReducer,\n//   }\n// })\n\nexport type RootState = ReturnType<typeof store.getState>\nexport default store\n\n// export type AppDispatch = typeof store.dispatch\n// export const useAppDispatch = () => useDispatch()"]},"metadata":{},"sourceType":"module"}