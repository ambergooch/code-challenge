{"ast":null,"code":"var _jsxFileName = \"/Users/amber/Documents/workspace/code-challenge/my-app/src/components/Budgets.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'; // export interface ColDef {\n//   editable: boolean\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Budgets() {\n  _s();\n\n  const rowData = useSelector(state => state.budgets.budgets);\n  const columnDefs = [{\n    headerName: 'Item/Task',\n    field: 'item'\n  }, {\n    headerName: 'Units',\n    field: 'units',\n    editable: true\n  }, {\n    headerName: 'Cost Per Unit',\n    field: 'cost_per_unit'\n  }, {\n    headerName: 'Total Cost',\n    field: 'total_cost'\n  }];\n\n  const currencyFormatter = currency => {\n    var sansDec = currency.toFixed(0);\n    var formatted = sansDec.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return `$ ${formatted}`;\n  }; // function isEditable(params: EditableCallbackParams) => boolean\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 300,\n      width: 800,\n      marginLeft: 30\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: rowData,\n      columnDefs: columnDefs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Budgets, \"8hR1YdjQ/lKfag69KE6Yn2bS0mg=\", false, function () {\n  return [useSelector];\n});\n\n_c = Budgets;\nexport default Budgets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budgets\");","map":{"version":3,"sources":["/Users/amber/Documents/workspace/code-challenge/my-app/src/components/Budgets.tsx"],"names":["React","useSelector","AgGridReact","Budgets","rowData","state","budgets","columnDefs","headerName","field","editable","currencyFormatter","currency","sansDec","toFixed","formatted","replace","height","width","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAAuBC,WAAvB,QAA0C,eAA1C;AAEA,OAAO,2CAAP;AACA,OAAO,mDAAP,C,CAEA;AACA;AACA;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEjB,QAAMC,OAAO,GAAGH,WAAW,CACxBI,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcA,OADA,CAA3B;AAIA,QAAMC,UAAU,GAAI,CAClB;AAACC,IAAAA,UAAU,EAAE,WAAb;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GADkB,EAElB;AAACD,IAAAA,UAAU,EAAE,OAAb;AAAsBC,IAAAA,KAAK,EAAE,OAA7B;AAAsCC,IAAAA,QAAQ,EAAE;AAAhD,GAFkB,EAGlB;AAACF,IAAAA,UAAU,EAAE,eAAb;AAA8BC,IAAAA,KAAK,EAAE;AAArC,GAHkB,EAIlB;AAACD,IAAAA,UAAU,EAAE,YAAb;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GAJkB,CAApB;;AAOA,QAAME,iBAAiB,GAAIC,QAAD,IAAsB;AAC9C,QAAIC,OAAO,GAAGD,QAAQ,CAACE,OAAT,CAAiB,CAAjB,CAAd;AACA,QAAIC,SAAS,GAAGF,OAAO,CAACG,OAAR,CAAgB,uBAAhB,EAAyC,GAAzC,CAAhB;AACA,WAAQ,KAAID,SAAU,EAAtB;AACD,GAJD,CAbiB,CAmBjB;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE,GAAtB;AAA2BC,MAAAA,UAAU,EAAE;AAAvC,KAAxC;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEf,OAAtB;AAA+B,MAAA,UAAU,EAAEG;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAhDQJ,O;UAESF,W;;;KAFTE,O;AAkDT,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { BudgetsState } from '../reducers/budgetsReducer'\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react'\n\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'\n\n// export interface ColDef {\n//   editable: boolean\n// }\n\nfunction Budgets() {\n\n  const rowData = useSelector<BudgetsState, BudgetsState['budgets']>(\n    (state) => state.budgets.budgets\n  )\n\n  const columnDefs =  [\n    {headerName: 'Item/Task', field: 'item'},\n    {headerName: 'Units', field: 'units', editable: true},\n    {headerName: 'Cost Per Unit', field: 'cost_per_unit'},\n    {headerName: 'Total Cost', field: 'total_cost'},\n]\n\n  const currencyFormatter = (currency: number) => {\n    var sansDec = currency.toFixed(0);\n    var formatted = sansDec.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return `$ ${formatted}`\n  }\n\n  // function isEditable(params: EditableCallbackParams) => boolean\n\n  return (\n    <div className='ag-theme-alpine' style={{ height: 300, width: 800, marginLeft: 30 }}>\n      <h1>Project Budget</h1>\n      <AgGridReact rowData={rowData} columnDefs={columnDefs}>\n        {/* <AgGridColumn \n          headerName='Item/Task' \n          field='item'\n        />\n        <AgGridColumn \n          headerName='Units' \n          field='units'\n          // cellEditor='agSelectCellEditor' \n          // cellEditorParams={languageCellEditorParams}\n        />\n        <AgGridColumn \n          headerName='Cost Per Unit' \n          field='cost_per_unit'\n          // valueFormatter={params => currencyFormatter(params.data.cost_per_unit)}\n        />\n        <AgGridColumn \n          headerName='Total Cost' \n          field='total_cost'\n          // valueFormatter={params => currencyFormatter(params.data.total_cost)}\n        /> */}\n      </AgGridReact>\n    </div>\n  )\n}\n\nexport default Budgets"]},"metadata":{},"sourceType":"module"}