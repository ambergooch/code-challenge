{"ast":null,"code":"import { ADD_ARTICLE } from './actions';\nconst initialState = {\n  articles: []\n};\n\n// | ReturnType<typeof addPerson>\nconst budgetsReducer = (state = initialState, action) => {\n  if (action.type === ADD_ARTICLE) {\n    //  return Object.assign({}, state, {\n    //   articles: state.articles.concat(action.payload)\n    // });\n    return { ...state,\n      ...{\n        articles: action.payload\n      }\n    };\n  }\n\n  return state; // return [\n  //   { title: 'Smells Like Teen Spirit', duration: '4:05' },\n  //   { title: 'All Star', duration: '3:35' },\n  //   { title: 'Wannabe', duration: '2:45' },\n  //   { title: 'Semi-Charmed Life', duration: '3:15' },\n  // ]\n}; // const loansReducer = (selectedSong = null, action: Actions) => {\n//   if (action.type === 'ADD_ARTICLE') {\n//     return action.payload\n//   }\n//   return loansReducer\n// }\n\n\nexport default budgetsReducer; // export default combineReducers({\n//   budgets: budgetsReducer,\n//   // loans: loansReducer,\n// })\n// import { combineReducers } from '@reduxjs/toolkit'\n// const rootReducer = combineReducers({\n//   oneReducer,\n//   anotherReducer,\n// })\n// export type RootState = ReturnType\n// export default rootReducer","map":{"version":3,"sources":["/Users/amber/Documents/workspace/code-challenge/my-app/src/reducers.tsx"],"names":["ADD_ARTICLE","initialState","articles","budgetsReducer","state","action","type","payload"],"mappings":"AAEA,SAASA,WAAT,QAAwC,WAAxC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;;AAKA;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAA2C;AAChE,MAAIA,MAAM,CAACC,IAAP,KAAgBN,WAApB,EAAiC;AAC/B;AACA;AACA;AACA,WAAO,EAAC,GAAGI,KAAJ;AACL,SAAG;AAAEF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAAnB;AADE,KAAP;AAGD;;AACD,SAAOH,KAAP,CATgE,CAUhE;AACA;AACA;AACA;AACA;AACA;AACD,CAhBD,C,CAkBA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,eAAeD,cAAf,C,CAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import { combineReducers } from 'redux'\n\nimport { ADD_ARTICLE, addArticle } from './actions'\n\nconst initialState = {\n  articles: [] \n}\n\ntype Actions = ReturnType<typeof addArticle> \n// | ReturnType<typeof addPerson>\n\nconst budgetsReducer = (state = initialState, action: Actions) => {\n  if (action.type === ADD_ARTICLE) {\n    //  return Object.assign({}, state, {\n    //   articles: state.articles.concat(action.payload)\n    // });\n    return {...state, \n      ...{ articles: action.payload }\n    }\n  }\n  return state\n  // return [\n  //   { title: 'Smells Like Teen Spirit', duration: '4:05' },\n  //   { title: 'All Star', duration: '3:35' },\n  //   { title: 'Wannabe', duration: '2:45' },\n  //   { title: 'Semi-Charmed Life', duration: '3:15' },\n  // ]\n}\n\n// const loansReducer = (selectedSong = null, action: Actions) => {\n//   if (action.type === 'ADD_ARTICLE') {\n//     return action.payload\n//   }\n\n//   return loansReducer\n// }\n\nexport default budgetsReducer\n\n// export default combineReducers({\n//   budgets: budgetsReducer,\n//   // loans: loansReducer,\n// })\n\n// import { combineReducers } from '@reduxjs/toolkit'\n\n// const rootReducer = combineReducers({\n//   oneReducer,\n//   anotherReducer,\n// })\n\n// export type RootState = ReturnType\n\n// export default rootReducer"]},"metadata":{},"sourceType":"module"}