{"ast":null,"code":"var _jsxFileName = \"/Users/amber/Documents/workspace/code-challenge/my-app/src/components/Budgets.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addBudgetData } from '../actions';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Budgets() {\n  _s();\n\n  const dispatch = useDispatch();\n  const rowData = useSelector(state => state.budgets.budgets);\n\n  const currencyFormatter = currency => {\n    var sansDec = currency.toFixed(0);\n    var formatted = sansDec.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return `$ ${formatted}`;\n  };\n\n  const calculateTotal = params => {\n    return currencyFormatter(params.data.units * params.data.cost_per_unit);\n  };\n\n  const onCellValueChanged = params => {\n    console.log(params);\n    dispatch(addBudgetData);\n  };\n\n  const columnDefs = [{\n    headerName: 'Item/Task',\n    field: 'item'\n  }, {\n    headerName: 'Units',\n    field: 'units',\n    editable: true,\n    cellValueChanged: onCellValueChanged\n  }, {\n    headerName: 'Cost Per Unit',\n    field: 'cost_per_unit'\n  }, {\n    headerName: 'Total Cost',\n    field: 'total_cost',\n    valueGetter: calculateTotal\n  }]; // function isEditable(params: EditableCallbackParams) => boolean\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 300,\n      width: 800,\n      marginLeft: 30\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: rowData,\n      columnDefs: columnDefs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Budgets, \"t3bq4zgblLZ71c8mSPR8fW72juc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Budgets;\nexport default Budgets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budgets\");","map":{"version":3,"sources":["/Users/amber/Documents/workspace/code-challenge/my-app/src/components/Budgets.tsx"],"names":["React","useSelector","useDispatch","addBudgetData","AgGridReact","Budgets","dispatch","rowData","state","budgets","currencyFormatter","currency","sansDec","toFixed","formatted","replace","calculateTotal","params","data","units","cost_per_unit","onCellValueChanged","console","log","columnDefs","headerName","field","editable","cellValueChanged","valueGetter","height","width","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,aAAT,QAA8B,YAA9B;AACA,SAAuBC,WAAvB,QAA0C,eAA1C;AAEA,OAAO,2CAAP;AACA,OAAO,mDAAP;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,OAAO,GAAGN,WAAW,CACxBO,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcA,OADA,CAA3B;;AAKA,QAAMC,iBAAiB,GAAIC,QAAD,IAAmB;AAC3C,QAAIC,OAAO,GAAGD,QAAQ,CAACE,OAAT,CAAiB,CAAjB,CAAd;AACA,QAAIC,SAAS,GAAGF,OAAO,CAACG,OAAR,CAAgB,uBAAhB,EAAyC,GAAzC,CAAhB;AACA,WAAQ,KAAID,SAAU,EAAtB;AACD,GAJD;;AAMA,QAAME,cAAc,GAAIC,MAAD,IAAiB;AACtC,WAAOP,iBAAiB,CAACO,MAAM,CAACC,IAAP,CAAYC,KAAZ,GAAoBF,MAAM,CAACC,IAAP,CAAYE,aAAjC,CAAxB;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAIJ,MAAD,IAAiB;AAC1CK,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACAX,IAAAA,QAAQ,CAACH,aAAD,CAAR;AACD,GAHD;;AAKA,QAAMqB,UAAU,GAAI,CAClB;AAAEC,IAAAA,UAAU,EAAE,WAAd;AAA2BC,IAAAA,KAAK,EAAE;AAAlC,GADkB,EAElB;AAAED,IAAAA,UAAU,EAAE,OAAd;AAAuBC,IAAAA,KAAK,EAAE,OAA9B;AAAuCC,IAAAA,QAAQ,EAAE,IAAjD;AAAuDC,IAAAA,gBAAgB,EAAEP;AAAzE,GAFkB,EAGlB;AAAEI,IAAAA,UAAU,EAAE,eAAd;AAA+BC,IAAAA,KAAK,EAAE;AAAtC,GAHkB,EAIlB;AAAED,IAAAA,UAAU,EAAE,YAAd;AAA4BC,IAAAA,KAAK,EAAE,YAAnC;AAAiDG,IAAAA,WAAW,EAAEb;AAA9D,GAJkB,CAApB,CAvBiB,CA6BjB;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,KAAK,EAAE;AAAEc,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE,GAAtB;AAA2BC,MAAAA,UAAU,EAAE;AAAvC,KAAxC;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEzB,OAAtB;AAA+B,MAAA,UAAU,EAAEiB;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA1DQnB,O;UACUH,W,EAEDD,W;;;KAHTI,O;AA4DT,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BudgetsState } from '../reducers/budgetsReducer'\nimport { addBudgetData } from '../actions'\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react'\n\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'\n\nfunction Budgets() {\n  const dispatch = useDispatch()\n\n  const rowData = useSelector<BudgetsState, BudgetsState['budgets']>(\n    (state) => state.budgets.budgets\n  )\n\n  \n  const currencyFormatter = (currency: any) => {\n    var sansDec = currency.toFixed(0);\n    var formatted = sansDec.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return `$ ${formatted}`\n  }\n\n  const calculateTotal = (params: any) => {\n    return currencyFormatter(params.data.units * params.data.cost_per_unit)\n  }\n\n  const onCellValueChanged = (params: any) => {\n    console.log(params)\n    dispatch(addBudgetData)\n  }\n\n  const columnDefs =  [\n    { headerName: 'Item/Task', field: 'item' },\n    { headerName: 'Units', field: 'units', editable: true, cellValueChanged: onCellValueChanged },\n    { headerName: 'Cost Per Unit', field: 'cost_per_unit' },\n    { headerName: 'Total Cost', field: 'total_cost', valueGetter: calculateTotal },\n]\n  // function isEditable(params: EditableCallbackParams) => boolean\n\n  return (\n    <div className='ag-theme-alpine' style={{ height: 300, width: 800, marginLeft: 30 }}>\n      <h1>Project Budget</h1>\n      <AgGridReact rowData={rowData} columnDefs={columnDefs}>\n        {/* <AgGridColumn \n          headerName='Item/Task' \n          field='item'\n        />\n        <AgGridColumn \n          headerName='Units' \n          field='units'\n          // cellEditor='agSelectCellEditor' \n          // cellEditorParams={languageCellEditorParams}\n        />\n        <AgGridColumn \n          headerName='Cost Per Unit' \n          field='cost_per_unit'\n          // valueFormatter={params => currencyFormatter(params.data.cost_per_unit)}\n        /> */}\n        {/* <AgGridColumn \n          headerName='Total Cost' \n          field='total_cost'\n          // valueFormatter={params => currencyFormatter(params.data.total_cost)}\n        /> */}\n      </AgGridReact>\n    </div>\n  )\n}\n\nexport default Budgets"]},"metadata":{},"sourceType":"module"}