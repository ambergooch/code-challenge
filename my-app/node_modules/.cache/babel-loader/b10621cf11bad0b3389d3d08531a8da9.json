{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport budgetsReducer from '../reducers';\n// const store = createStore({\n//   budgetsReducer,\n//     // collateral: collateralReducer,\n//     // loans: loansReducer,\n// })\nconst store = configureStore({\n  reducer: {\n    budgets: budgetsReducer // collateral: collateralReducer,\n    // loans: loansReducer,\n\n  }\n});\nexport default store; // export type AppDispatch = typeof store.dispatch\n// export const useAppDispatch = () => useDispatch()","map":{"version":3,"sources":["/Users/amber/Documents/workspace/code-challenge/my-app/src/store/index.tsx"],"names":["configureStore","budgetsReducer","store","reducer","budgets"],"mappings":"AAAA,SAAsBA,cAAtB,QAAuF,kBAAvF;AAGA,OAAOC,cAAP,MAA2B,aAA3B;AAIA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAGF,cAAc,CAAC;AAC3BG,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAEH,cADF,CAEP;AACA;;AAHO;AADkB,CAAD,CAA5B;AASA,eAAeC,KAAf,C,CAEA;AACA","sourcesContent":["import { createStore, configureStore, combineReducers, applyMiddleware, compose } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\n\nimport budgetsReducer from '../reducers'\nimport collateralReducer from '../reducers'\nimport loansReducer from '../reducers'\n\n// const store = createStore({\n//   budgetsReducer,\n//     // collateral: collateralReducer,\n//     // loans: loansReducer,\n// })\nconst store = configureStore({\n  reducer: {\n    budgets: budgetsReducer,\n    // collateral: collateralReducer,\n    // loans: loansReducer,\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport default store\n\n// export type AppDispatch = typeof store.dispatch\n// export const useAppDispatch = () => useDispatch()"]},"metadata":{},"sourceType":"module"}