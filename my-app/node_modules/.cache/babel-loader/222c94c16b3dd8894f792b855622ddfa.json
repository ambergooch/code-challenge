{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport budgetsReducer from '../reducers';\nimport collateralReducer from '../reducers';\nimport loansReducer from '../reducers';\nconst store = configureStore({\n  reducer: {\n    budgets: budgetsReducer,\n    collateral: collateralReducer,\n    loans: loansReducer\n  }\n});\nexport default store; // export type AppDispatch = typeof store.dispatch\n// export const useAppDispatch = () => useDispatch()","map":{"version":3,"sources":["/Users/amber/Documents/workspace/code-challenge/my-app/src/store/index.tsx"],"names":["configureStore","budgetsReducer","collateralReducer","loansReducer","store","reducer","budgets","collateral","loans"],"mappings":"AAAA,SAASA,cAAT,QAA0E,kBAA1E;AAGA,OAAOC,cAAP,MAA2B,aAA3B;AACA,OAAOC,iBAAP,MAA8B,aAA9B;AACA,OAAOC,YAAP,MAAyB,aAAzB;AAEA,MAAMC,KAAK,GAAGJ,cAAc,CAAC;AAC3BK,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAEL,cADF;AAEPM,IAAAA,UAAU,EAAEL,iBAFL;AAGPM,IAAAA,KAAK,EAAEL;AAHA;AADkB,CAAD,CAA5B;AASA,eAAeC,KAAf,C,CAEA;AACA","sourcesContent":["import { configureStore, combineReducers, applyMiddleware, compose } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\n\nimport budgetsReducer from '../reducers'\nimport collateralReducer from '../reducers'\nimport loansReducer from '../reducers'\n\nconst store = configureStore({\n  reducer: {\n    budgets: budgetsReducer,\n    collateral: collateralReducer,\n    loans: loansReducer,\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport default store\n\n// export type AppDispatch = typeof store.dispatch\n// export const useAppDispatch = () => useDispatch()"]},"metadata":{},"sourceType":"module"}