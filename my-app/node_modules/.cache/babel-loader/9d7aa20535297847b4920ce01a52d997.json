{"ast":null,"code":"var _jsxFileName = \"/Users/amber/Documents/workspace/code-challenge/my-app/src/components/Budgets.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'; // export interface ColDef {\n//   editable: boolean\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Budgets() {\n  _s();\n\n  const dispatch = useDispatch();\n  const rowData = useSelector(state => state.budgets.budgets);\n\n  const currencyFormatter = currency => {\n    console.log(currency);\n    var sansDec = currency.toFixed(0);\n    var formatted = sansDec.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return `$ ${formatted}`;\n  };\n\n  function calculateTotal(params) {\n    return currencyFormatter(params.data.units * params.data.cost_per_unit);\n  }\n\n  const columnDefs = [{\n    headerName: 'Item/Task',\n    field: 'item'\n  }, {\n    headerName: 'Units',\n    field: 'units',\n    editable: true,\n    cellValueChanged: 'onCellValueChanged($event)'\n  }, {\n    headerName: 'Cost Per Unit',\n    field: 'cost_per_unit'\n  }, {\n    headerName: 'Total Cost',\n    valueGetter: calculateTotal\n  }]; // function isEditable(params: EditableCallbackParams) => boolean\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine\",\n    style: {\n      height: 300,\n      width: 800,\n      marginLeft: 30\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n      rowData: rowData,\n      columnDefs: columnDefs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Budgets, \"t3bq4zgblLZ71c8mSPR8fW72juc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Budgets;\nexport default Budgets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budgets\");","map":{"version":3,"sources":["/Users/amber/Documents/workspace/code-challenge/my-app/src/components/Budgets.tsx"],"names":["React","useSelector","useDispatch","AgGridReact","Budgets","dispatch","rowData","state","budgets","currencyFormatter","currency","console","log","sansDec","toFixed","formatted","replace","calculateTotal","params","data","units","cost_per_unit","columnDefs","headerName","field","editable","cellValueChanged","valueGetter","height","width","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAAuBC,WAAvB,QAA0C,eAA1C;AAEA,OAAO,2CAAP;AACA,OAAO,mDAAP,C,CAEA;AACA;AACA;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAMI,OAAO,GAAGL,WAAW,CACxBM,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcA,OADA,CAA3B;;AAKA,QAAMC,iBAAiB,GAAIC,QAAD,IAAmB;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAIG,OAAO,GAAGH,QAAQ,CAACI,OAAT,CAAiB,CAAjB,CAAd;AACA,QAAIC,SAAS,GAAGF,OAAO,CAACG,OAAR,CAAgB,uBAAhB,EAAyC,GAAzC,CAAhB;AACA,WAAQ,KAAID,SAAU,EAAtB;AACD,GALD;;AAOA,WAASE,cAAT,CAAwBC,MAAxB,EAAqC;AACnC,WAAOT,iBAAiB,CAACS,MAAM,CAACC,IAAP,CAAYC,KAAZ,GAAoBF,MAAM,CAACC,IAAP,CAAYE,aAAjC,CAAxB;AACD;;AAED,QAAMC,UAAU,GAAI,CAClB;AAACC,IAAAA,UAAU,EAAE,WAAb;AAA0BC,IAAAA,KAAK,EAAE;AAAjC,GADkB,EAElB;AAACD,IAAAA,UAAU,EAAE,OAAb;AAAsBC,IAAAA,KAAK,EAAE,OAA7B;AAAsCC,IAAAA,QAAQ,EAAE,IAAhD;AAAsDC,IAAAA,gBAAgB,EAAE;AAAxE,GAFkB,EAGlB;AAACH,IAAAA,UAAU,EAAE,eAAb;AAA8BC,IAAAA,KAAK,EAAE;AAArC,GAHkB,EAIlB;AAACD,IAAAA,UAAU,EAAE,YAAb;AAA2BI,IAAAA,WAAW,EAAEV;AAAxC,GAJkB,CAApB,CAnBiB,CAyBjB;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,KAAK,EAAE;AAAEW,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE,GAAtB;AAA2BC,MAAAA,UAAU,EAAE;AAAvC,KAAxC;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAExB,OAAtB;AAA+B,MAAA,UAAU,EAAEgB;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAtDQlB,O;UACUF,W,EAEDD,W;;;KAHTG,O;AAwDT,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BudgetsState } from '../reducers/budgetsReducer'\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react'\n\nimport 'ag-grid-community/dist/styles/ag-grid.css'\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'\n\n// export interface ColDef {\n//   editable: boolean\n// }\n\nfunction Budgets() {\n  const dispatch = useDispatch()\n\n  const rowData = useSelector<BudgetsState, BudgetsState['budgets']>(\n    (state) => state.budgets.budgets\n  )\n\n  \n  const currencyFormatter = (currency: any) => {\n    console.log(currency)\n    var sansDec = currency.toFixed(0);\n    var formatted = sansDec.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    return `$ ${formatted}`\n  }\n\n  function calculateTotal(params: any) {\n    return currencyFormatter(params.data.units * params.data.cost_per_unit)\n  }\n  \n  const columnDefs =  [\n    {headerName: 'Item/Task', field: 'item'},\n    {headerName: 'Units', field: 'units', editable: true, cellValueChanged: 'onCellValueChanged($event)'},\n    {headerName: 'Cost Per Unit', field: 'cost_per_unit'},\n    {headerName: 'Total Cost', valueGetter: calculateTotal},\n]\n  // function isEditable(params: EditableCallbackParams) => boolean\n\n  return (\n    <div className='ag-theme-alpine' style={{ height: 300, width: 800, marginLeft: 30 }}>\n      <h1>Project Budget</h1>\n      <AgGridReact rowData={rowData} columnDefs={columnDefs}>\n        {/* <AgGridColumn \n          headerName='Item/Task' \n          field='item'\n        />\n        <AgGridColumn \n          headerName='Units' \n          field='units'\n          // cellEditor='agSelectCellEditor' \n          // cellEditorParams={languageCellEditorParams}\n        />\n        <AgGridColumn \n          headerName='Cost Per Unit' \n          field='cost_per_unit'\n          // valueFormatter={params => currencyFormatter(params.data.cost_per_unit)}\n        /> */}\n        {/* <AgGridColumn \n          headerName='Total Cost' \n          field='total_cost'\n          // valueFormatter={params => currencyFormatter(params.data.total_cost)}\n        /> */}\n      </AgGridReact>\n    </div>\n  )\n}\n\nexport default Budgets"]},"metadata":{},"sourceType":"module"}