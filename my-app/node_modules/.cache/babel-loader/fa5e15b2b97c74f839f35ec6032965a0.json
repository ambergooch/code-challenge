{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { ADD_ARTICLE } from './actions';\nconst initialState = {\n  articles: []\n};\n\nconst budgetsReducer = (state = initialState, action) => {\n  if (action.type === ADD_ARTICLE) {\n    //  return Object.assign({}, state, {\n    //   articles: state.articles.concat(action.payload)\n    // });\n    return { ...state,\n      ...{\n        articles: state.articles.concat(action.payload)\n      }\n    };\n  }\n\n  return state; // return [\n  //   { title: 'Smells Like Teen Spirit', duration: '4:05' },\n  //   { title: 'All Star', duration: '3:35' },\n  //   { title: 'Wannabe', duration: '2:45' },\n  //   { title: 'Semi-Charmed Life', duration: '3:15' },\n  // ]\n};\n\nconst loansReducer = (selectedSong = null, action) => {\n  if (action.type === 'ADD_ARTICLE') {\n    return action.payload;\n  }\n\n  return loansReducer;\n};\n\nexport default combineReducers({\n  budgets: budgetsReducer,\n  loans: loansReducer\n}); // import { combineReducers } from '@reduxjs/toolkit'\n// const rootReducer = combineReducers({\n//   oneReducer,\n//   anotherReducer,\n// })\n// export type RootState = ReturnType\n// export default rootReducer","map":{"version":3,"sources":["/Users/amber/Documents/workspace/code-challenge/my-app/src/reducers.tsx"],"names":["combineReducers","ADD_ARTICLE","initialState","articles","budgetsReducer","state","action","type","concat","payload","loansReducer","selectedSong","budgets","loans"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAAwC,WAAxC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;;AAIA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACvD,MAAIA,MAAM,CAACC,IAAP,KAAgBN,WAApB,EAAiC;AAC/B;AACA;AACA;AACA,WAAO,EAAC,GAAGI,KAAJ;AACL,SAAG;AAAEF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeK,MAAf,CAAsBF,MAAM,CAACG,OAA7B;AAAZ;AADE,KAAP;AAGD;;AACD,SAAOJ,KAAP,CATuD,CAUvD;AACA;AACA;AACA;AACA;AACA;AACD,CAhBD;;AAkBA,MAAMK,YAAY,GAAG,CAACC,YAAY,GAAG,IAAhB,EAAsBL,MAAtB,KAAiC;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC,WAAOD,MAAM,CAACG,OAAd;AACD;;AAED,SAAOC,YAAP;AACD,CAND;;AAQA,eAAeV,eAAe,CAAC;AAC7BY,EAAAA,OAAO,EAAER,cADoB;AAE7BS,EAAAA,KAAK,EAAEH;AAFsB,CAAD,CAA9B,C,CAKA;AAEA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import { combineReducers } from 'redux'\n\nimport { ADD_ARTICLE, addArticle } from './actions'\n\nconst initialState = {\n  articles: []\n}\n\nconst budgetsReducer = (state = initialState, action) => {\n  if (action.type === ADD_ARTICLE) {\n    //  return Object.assign({}, state, {\n    //   articles: state.articles.concat(action.payload)\n    // });\n    return {...state, \n      ...{ articles: state.articles.concat(action.payload) }\n    }\n  }\n  return state\n  // return [\n  //   { title: 'Smells Like Teen Spirit', duration: '4:05' },\n  //   { title: 'All Star', duration: '3:35' },\n  //   { title: 'Wannabe', duration: '2:45' },\n  //   { title: 'Semi-Charmed Life', duration: '3:15' },\n  // ]\n}\n\nconst loansReducer = (selectedSong = null, action) => {\n  if (action.type === 'ADD_ARTICLE') {\n    return action.payload\n  }\n\n  return loansReducer\n}\n\nexport default combineReducers({\n  budgets: budgetsReducer,\n  loans: loansReducer,\n})\n\n// import { combineReducers } from '@reduxjs/toolkit'\n\n// const rootReducer = combineReducers({\n//   oneReducer,\n//   anotherReducer,\n// })\n\n// export type RootState = ReturnType\n\n// export default rootReducer"]},"metadata":{},"sourceType":"module"}